import os

import requests
from aiogram import types, Dispatcher


from bot.create_bot import bot


async def doc_set(message: types.Message, **kwargs):
    if message.document.mime_type not in ['text/plain'] or message.document.file_name[-3:] != 'REC':
        await bot.send_message(message.from_user.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ ‚ùå. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .REC!")
        await message.delete()
        return

    if message.document.file_size > 83886080:
        await bot.send_message(message.from_user.id, "–ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –æ–±—ä–µ–º —Ñ–∞–π–ª–∞ ‚ùå")
        await message.delete()
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    msg = await bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞üïí")
    file_info = await bot.get_file(message.document.file_id)

    BOT_TOKEN = os.getenv("TOKEN")
    file_url = f'https://api.telegram.org/file/bot{BOT_TOKEN}/{file_info.file_path}'

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    response = requests.get(file_url, stream=True)
    print(response)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ GET-–∑–∞–ø—Ä–æ—Å–∞
    if response.status_code == 200:
        files = {'file': ('filename', response.raw)}
        post_response = requests.post("http://v0d14ka.ddns.net:99/", files=files)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ POST-–∑–∞–ø—Ä–æ—Å–∞
        if post_response.status_code == 200:
            word_url = post_response.json()['word_url']
            get_word_response = requests.get(f"http://v0d14ka.ddns.net:99/{word_url}", stream=True)

            if get_word_response.content is not None:
                await msg.delete()
                await bot.send_document(message.from_user.id, get_word_response.content, caption='–û—Ç—á–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ WORD!')
            else:
                await msg.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")

        else:
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {post_response.status_code}')
            print(post_response.text)
            await msg.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")
            return
    else:
        print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {response.status_code}')
        await msg.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")
        return

    await message.delete()


def register_handlers_general(_dp: Dispatcher):
    _dp.register_message_handler(doc_set, content_types=['document'], state=None)
