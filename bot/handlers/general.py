import io
import os

import aiohttp
import requests
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.utils.exceptions import MessageCantBeDeleted

from bot.create_bot import bot


class FSMSetDoc(StatesGroup):
    new_value = State()


async def upload(message: types.Message, state: FSMContext):
    try:
        msg = await bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª")
        async with state.proxy() as data:
            data['msg'] = msg
            await FSMSetDoc.new_value.set()

        try:
            await message.delete()
        except MessageCantBeDeleted:
            pass
    except:
        pass


async def doc_set(message: types.Message, state: FSMContext, **kwargs):
    async with state.proxy() as data:
        # –ó–∞–±–∏—Ä–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        msg: types.Message = data["msg"]

        if message.document.mime_type in ['text/plain'] and message.document.file_name[-3:] == 'REC':
            if message.document.file_size < 83886080:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                await msg.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞üïí")
                await state.finish()

                print(message.document.file_id)
                file_info = await bot.get_file(message.document.file_id)

                BOT_TOKEN = os.getenv("TOKEN")
                file_url = f'https://api.telegram.org/file/bot{BOT_TOKEN}/{file_info.file_path}'

                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                response = requests.get(file_url, stream=True)
                print(response)

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ GET-–∑–∞–ø—Ä–æ—Å–∞
                if response.status_code == 200:
                    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä
                    files = {'file': ('filename', response.raw)}
                    post_response = requests.post("http://v0d14ka.ddns.net:99/", files=files)
                    print(post_response.json())

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ POST-–∑–∞–ø—Ä–æ—Å–∞
                    if post_response.status_code == 200:
                        print('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.')
                    else:
                        print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {post_response.status_code}')
                        print(post_response.text)
                else:
                    print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {response.status_code}')

                if response != "error":
                    await msg.edit_text("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!‚úÖ")
                else:
                    await msg.edit_text("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–µ–º —Ä–∞–±–æ—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è")

        else:
            await msg.edit_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞‚ùå. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.")
            await message.delete()
            return

        await message.delete()
        await state.finish()


def register_handlers_general(_dp: Dispatcher):
    _dp.register_message_handler(upload, commands=['file'], state=None)
    _dp.register_message_handler(doc_set, state=FSMSetDoc.new_value, content_types=['document'])
    _dp.register_message_handler(doc_set, commands=['start', 'help'], state=None)
